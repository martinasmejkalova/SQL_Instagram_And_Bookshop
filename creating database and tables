CREATE DATABASE book_shop;
USE book_shop;

CREATE TABLE books 
	(
		book_id INT NOT NULL AUTO_INCREMENT,
		title VARCHAR(100),
		author_fname VARCHAR(100),
		author_lname VARCHAR(100),
		released_year INT,
		stock_quantity INT,
		pages INT,
		PRIMARY KEY(book_id)
	);

INSERT INTO books (title, author_fname, author_lname, released_year, stock_quantity, pages)
VALUES
('The Namesake', 'Jhumpa', 'Lahiri', 2003, 32, 291),
('Norse Mythology', 'Neil', 'Gaiman',2016, 43, 304),
('American Gods', 'Neil', 'Gaiman', 2001, 12, 465),
('Interpreter of Maladies', 'Jhumpa', 'Lahiri', 1996, 97, 198),
('A Hologram for the King: A Novel', 'Dave', 'Eggers', 2012, 154, 352),
('The Circle', 'Dave', 'Eggers', 2013, 26, 504),
('The Amazing Adventures of Kavalier & Clay', 'Michael', 'Chabon', 2000, 68, 634),
('Just Kids', 'Patti', 'Smith', 2010, 55, 304),
('A Heartbreaking Work of Staggering Genius', 'Dave', 'Eggers', 2001, 104, 437),
('Coraline', 'Neil', 'Gaiman', 2003, 100, 208),
('What We Talk About When We Talk About Love: Stories', 'Raymond', 'Carver', 1981, 23, 176),
("Where I'm Calling From: Selected Stories", 'Raymond', 'Carver', 1989, 12, 526),
('White Noise', 'Don', 'DeLillo', 1985, 49, 320),
('Cannery Row', 'John', 'Steinbeck', 1945, 95, 181),
('Oblivion: Stories', 'David', 'Foster Wallace', 2004, 172, 329),
('Consider the Lobster', 'David', 'Foster Wallace', 2005, 92, 343);

SELECT * from books;

SELECT CONCAT(author_fname,' ', author_lname) AS author_name FROM books;

SELECT CONCAT_WS(" - ", title, author_fname, author_lname) FROM books;

SELECT SUBSTRING(title, 1, 15) fROM books;
SELECT SUBSTR(title, 1, 10) AS 'short title' FROM books;

SELECT 
    CONCAT(SUBSTR(title, 1, 10), '...') AS short_title
FROM
    books;
    
SELECT REPLACE ('cheese bread coffee', ' ', ' and ');

SELECT REPLACE (title, ' ', ' - ') FROM books;

SELECT title FROM books;

SELECT CONCAT(author_fname, REVERSE(author_fname)) FROM books;

SELECT CONCAT(author_lname, ' is ', CHAR_LENGTH(author_lname), ' characters long') FROM books;

SELECT CONCAT('MY FAVORITE BOOK IS ', LOWER(title)) FROM books;

SELECT REPLACE (title, ' ', '->') AS title FROM books;
SELECT author_lname as forwards, REVERSE(author_lname) as backwards FROM books;

SELECT UPPER(CONCAT(author_fname,' ', author_lname)) as full_name_in_caps FROM books;

SELECT CONCAT('The ',title, 'was released in ', released_year) AS blurb FROM books;

SELECT title, char_length(title) AS number_of_characters FROM books;

SELECT 
    CONCAT(LEFT(title, 10), '...') as short_title,
    CONCAT(author_lname, ',', author_fname) AS author,
    CONCAT(stock_quantity, ' in stock') AS quantity
FROM
    books;
    
INSERT INTO books
    (title, author_fname, author_lname, released_year, stock_quantity, pages)
    VALUES ('10% Happier', 'Dan', 'Harris', 2014, 29, 256), 
           ('fake_book', 'Freida', 'Harris', 2001, 287, 428),
           ('Lincoln In The Bardo', 'George', 'Saunders', 2017, 1000, 367);

SELECT * FROM books;

SELECT DISTINCT author_lname FROM books;

SELECT DISTINCT author_fname, author_lname FROM books;

INSERT INTO books (title, author_lname) VALUES ('my life', 'steele');

SELECT book_id, author_fname, author_lname, pages
FROM books ORDER BY author_lname, author_fname;

SELECT * FROM books
WHERE author_fname LIKE '____';

SELECT * FROM books
WHERE title LIKE '%\_%';

SELECT title FROM books WHERE title LIKE '%stories%';

SELECT 
    title, pages
FROM
    books
ORDER BY pages DESC
LIMIT 1;

SELECT 
    CONCAT(title, ' - ', released_year) AS summary
FROM
    books
ORDER BY released_year DESC
LIMIT 3;

SELECT 
    title, author_lname
FROM
    books
WHERE
    author_lname LIKE '% %';
    
SELECT 
    title, released_year, stock_quantity
FROM
    books
ORDER BY stock_quantity, title ASC
LIMIT 1,3;

SELECT title, author_lname FROM books ORDER BY author_lname, title;

SELECT 
    UPPER(CONCAT('my favorite author is ',
                    author_fname,
                    ' ',
                    author_lname,
                    '!')) AS yell
FROM
    books ORDER BY author_lname;
    
SELECT COUNT(author_fname) FROM books;

SELECT author_lname, COUNT(*) FROM books GROUP BY author_lname;

SELECT released_year, COUNT(*) FROM books GROUP BY released_year;

SELECT MIN(released_year) FROM books;

SELECT * FROM books WHERE pages = (SELECT MIN(pages) FROM books);
SELECT title, released_year FROM books 
WHERE released_year = (SELECT MIN(released_year) FROM books);

SELECT 
    author_fname, author_lname, COUNT(*)
FROM
    books
GROUP BY author_lname , author_fname;

SELECT CONCAT(author_fname, ' ', author_lname) AS author,  COUNT(*)
FROM books
GROUP BY author;

SELECT 
    author_fname, author_lname, COUNT(*), MIN(released_year), MAX(released_year)
FROM
    books
GROUP BY author_lname , author_fname;

SELECT author_lname, SUM(pages) FROM books GROUP BY author_lname;

SELECT author_lname, COUNT(*), SUM(pages)
FROM books
GROUP BY author_lname;

SELECT 
    released_year, 
    AVG(stock_quantity), 
    COUNT(*) FROM books
GROUP BY released_year;

SELECT released_year, COUNT(*) FROM books GROUP BY released_year;

SELECT COUNT(*) FROM books;

SELECT 
    AVG(released_year)
FROM
    books
GROUP BY author_lname, author_fname;

SELECT 
    CONCAT(author_fname, ' ', author_lname) AS author,
    MAX(pages)
FROM
    books
GROUP BY author;

SELECT CONCAT(author_fname, ' ', author_lname) AS author, pages from Books ORDER BY pages DESC LIMIT 1;

SELECT 
    released_year AS year, COUNT(*) AS books, AVG(pages)
FROM
    books
GROUP BY year
ORDER BY year;
